/*
    This file contains common stylesheet for ninjam window, ninjam panel (appears in
    bottom when connected in a server) and ninjam tracks.

*/


NinjamRoomWindow #labelBpmBpi                                /* label used to show current bpi and bpm values inside ninjam room window */
{
    color: black;
    font-size: 9px;
}

/* Tool buttons in ninjam window
------------------------------------*/

#buttonVerticalLayout,
#buttonHorizontalLayout,
#buttonGridLayout,
#wide,
#narrow,
#licenceButton
{
    min-width: 24px;
}

#licenceButton                              /* show the server licence text */
{
    background-image: url(':/images/licence.png');
    background-position: center center;
    background-repeat: none;
}

#buttonVerticalLayout                       /* show ninjam tracks in vertical layout (like ReaNinjam) */
{
    margin-right: 0px;
}

#buttonHorizontalLayout                     /* show ninjam tracks in horizontal layout (like many DAW mixers) */
{
    margin-left: 0px;
}

#wide                                       /* button used to show wide/fat */
{
    margin: 0px;
}

#wide:!checked
{
    border-right-color: none;
}

#narrow                                     /* button used to show narrow tracks */
{
    margin-left: 0px;
}

#narrow:!checked
{
    border-left-color: none;
}

/* NinjamPanel - Appears in bottom when connected in a server
---------------------------- */

NinjamPanel #intervalPanel                  /* The widget used to show ninjam controls (bpi, bpm, accent and shape) and interval progress */
{
    color: black;
    font-weight: normal;
    font-size: 11px;
    background: none;
    margin: 0px;
}


/* Tunning the bpi, bpm, accents and shape comboboxes
-------------------------------------------------------*/

#panelCombos QLabel             /* The labels in left side of comboboxes (bpi, bpm, accents and shape) */
{
    color: rgba(0, 0, 0, 170);
}

#panelCombos QComboBox::down-arrow
{
    image:url(:/images/arrow-down.png);
}

#panelCombos QComboBox::down-arrow:hover
{
    image:url(:/images/arrow-down-lighter.png);
}

#panelCombos QComboBox::drop-down
{
    border: 0px;
}

#panelCombos QComboBox
{
    background-position: center right;
    background-repeat: none;
    font-size: 11px;
    color: rgb(50, 50, 50);
    border: 1px solid rgba(0, 0, 0, 40);
    padding: 0px 5px 0px 5px;
    border-radius: 2px;
}

#panelCombos QComboBox[pending="true"]             /* bpi and bpm combos are setted to 'pending' while a voting is running */
{
    color: red;
}

/* ------------------------------------------------------------------ */


/* Making the comboboxes area transparent */
NinjamPanel #panelCombos
{
    background: transparent;
}

/* Changing the metronome level and pan sliders */
MetronomePanel QSlider::groove:vertical
{
    width: 5px;
    margin: 0px;
    background: rgba(0, 0, 0, 40);
}

MetronomePanel QSlider::groove:horizontal
{
    background-color: rgba(0,0, 0, 40);
}
/* ---------------------------------------------------------------*/


MetronomePanel #preferencesButton,             /* Button used to open metronome preferences */
MetronomePanel #floatingWindowButton           /* The button used to open the metronome floating window */
{
    background-repeat: none;
    background-position: center center;
    padding-left: 0px;
    padding-right: 0px;
}

/* metronome, pan (L & R) labels, BPI and BPM labels */
NinjamPanel QLabel,
MetronomePanel QLabel
{
    color: rgba(0, 0, 0, 150);
    font-size: 11px;
}

#labelMetronome                    /* the label used to show the word 'metronome' */
{
    margin-top: 6px;
}



/* Ninjam tracks
------------------------- */
NinjamTrackView
{
    border: none;
}

NinjamTrackView #receiveLabel
{
    color: rgba(0, 0, 0, 120);
    font-size: 9px;
}

NinjamTrackView #soloButton,
NinjamTrackView #muteButton,
NinjamTrackView #lowCutButton,
NinjamTrackView #receiveButton,
NinjamTrackView BoostSpinBox
{
   border-color: rgb(95,95,95);
   color: rgb(40,40,40);
}

NinjamTrackView #lowCutButton,
NinjamTrackView #receiveButton
{
    background-position: center center;
    background-repeat: none;
    border-style: inset;
}

NinjamTrackView #receiveButton::hover
{
    border-style: solid;
}

NinjamTrackView #lowCutButton::hover
{
    border-style: solid;
    border-color: rgb(80, 80, 80);
}

NinjamTrackView QPushButton#lowCutButton:!checked
{
    border-style: outset;
}

NinjamTrackView QPushButton#receiveButton:!checked
{
    background-color:red;
}


NinjamTrackView QProgressBar                /* The progress bar in bottom of ninjam tracks showing downloaded interval */
{
    background-color: rgba(255, 255, 255, 20);
    border: none;
    min-height: 2px;
    max-height: 3px;
}

/* instruments menu */
InstrumentsButton:enabled:!hover
{
    border: none;
    background: none;
}

/* Ninjam track groups
------------------------*/

NinjamTrackGroupView #groupNameField        /* User name field in ninjam tracks */
{
    border: none;
    color: black;
    margin-bottom: 3px;
    margin-top: 3px;
    padding: 3px;
    qproperty-alignment: AlignCenter;
}

NinjamTrackGroupView #countryLabel          /* country name in ninjam tracks */
{
    color: rgba(0, 0, 0, 180);
    qproperty-alignment: AlignCenter;
    font-size: 9px;
}

NinjamTrackView  #channelName
{
    selection-background-color: rgb(51, 153, 255);
    selection-color: white;
}

IntervalProgressDisplay
{
    qproperty-currentBeatColor: white;
    qproperty-accentsColor: rgb(225, 225, 225);
    qproperty-currentAccentColor: rgb(0, 195, 0); /* light green*/
    qproperty-secondaryBeatsColor: gray;
    qproperty-disabledBeatsColor: rgba(0, 0, 0, 15);
    qproperty-linesColor: rgba(0, 0, 0, 40);
}

LooperWindow
{
    font-size: 18pt; /* size of 'wait' text in LooperWindow */
}

LooperWindow #layersWidget
{
    background-color: rgba(0, 0, 0, 10);
}

LooperWindow #buttonPlay:checked
{
    background-color: rgb(0, 195, 0);
}


LooperWindow #buttonRec:checked
{
    background-color: rgb(255, 0, 0);
}

LooperWindow #muteButton:disabled
{
    background: none;
    color: rgba(0, 0, 0, 30);
    border-color: rgba(0, 0, 0, 40);
}
